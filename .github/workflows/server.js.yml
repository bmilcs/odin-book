name: Server Test & Deploy

on:
  push:
    branches: ["main"]
    paths:
      - "server/**"
  pull_request:
    branches: ["main"]
    paths:
      - "server/**"

jobs:
  test:
    name: test
    runs-on: ubuntu-latest
    environment: PRODUCTION
    env:
      CLIENT_PORT: ${{ secrets.CLIENT_PORT }}
      SERVER_PORT: ${{ secrets.SERVER_PORT }}
      SOCKET_PORT: ${{ secrets.SOCKET_PORT }}
      CLIENT_PRODUCTION_URL: ${{ secrets.CLIENT_PRODUCTION_URL }}
      MONGO_DB: ${{ secrets.MONGO_DB }}
      DEVELOPMENT_DB: ${{ secrets.DEVELOPMENT_DB }}
      PRODUCTION_DB: ${{ secrets.PRODUCTION_DB }}
      ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}
      REFRESH_TOKEN_SECRET: ${{ secrets.REFRESH_TOKEN_SECRET }}
      ACCESS_TOKEN_EXPIRATION: ${{ secrets.ACCESS_TOKEN_EXPIRATION }}
      REFRESH_TOKEN_EXPIRATION: ${{ secrets.REFRESH_TOKEN_EXPIRATION }}
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install and test Node server
        run: |
          cd server
          npm ci
          npm run build --if-present
          npm run test-once

  deploy:
    name: deploy
    runs-on: ubuntu-latest
    environment: PRODUCTION
    needs: test
    steps:
      - uses: actions/checkout@v3
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: |
          cd server
          flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
